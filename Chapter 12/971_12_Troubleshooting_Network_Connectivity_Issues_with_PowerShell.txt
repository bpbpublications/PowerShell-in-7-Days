
# Test Connection 
Test-Connection -ComputerName www.example.local

# Test Connection with a Port
Test-NetConnection `
    -ComputerName www.example.local `
    -Port 80

# Get IP address details
Get-NetIPAddress
Get-NetIPAddress | Select-Object IPAddress

# Exclude all IP version 6 addresses and returns IP version 4 addresses plus the current DNS Server entries
Get-NetAdapter | `
Select-Object `
-Property Name, LinkSpeed, Status, 
     		@{ Name="IPv4 Address";Expression={ (Get-NetIPAddress -InterfaceIndex $_.ifIndex -AddressFamily IPv4).IPAddress }},
     		@{ Name="IPv4 DNS Servers";Expression={ (Get-DnsClientServerAddress -InterfaceIndex $_.ifIndex -AddressFamily IPv4).ServerAddresses }} | Format-Table -AutoSize

# Resolve a DNS Name
Resolve-DnsName www.example.local

# Get the Network Routing Table
Get-NetRoute

# Ping the Routing Table entries
$routeEntries = Get-NetRoute | Where-Object { $_.DestinationPrefix -notmatch "^127\.0\.0\." -and $_.AddressFamily -eq 2 }

foreach ($route in $routeEntries) {
$destination = ($route.DestinationPrefix -split '/')[0]
if ($destination -eq "0.0.0.0" -or $destination -eq $route.NextHop) { continue }

Write-Host "Testing route to destination: $destination"
$result = Test-Connection -ComputerName $destination -Count 1 -Quiet
    if ($result) {
        Write-Host "Route to $destination is working." -ForegroundColor Green
    } else {
        Write-Host "Route to $destination failed." -ForegroundColor Red
    }
}

# Test Bandwidth Issues
$computerName = "www.example.local"
$port = 80

$tcpTestResult = Test-NetConnection `
-ComputerName $computerName `
-Port $port `
-InformationLevel Detailed

$pingTestResult = Test-Connection `
-ComputerName $computerName -Count 1

$result = [PSCustomObject]@{
ComputerName = $tcpTestResult.ComputerName
RemoteAddress = $tcpTestResult.RemoteAddress
RemotePort = $tcpTestResult.RemotePort
InterfaceAlias = $tcpTestResult.InterfaceAlias
InterfaceDescription = $tcpTestResult.InterfaceDescription
TcpTestSucceeded = $tcpTestResult.TcpTestSucceeded
Latency = $pingTestResult.Latency
PingSucceeded = $pingTestResult.StatusCode -eq 0
PingReplyDetails = $pingTestResult
}
$result | Format-Table -AutoSize

# Perform Multiple Troubleshooting Tests
$scriptBlock = {
$outputFile = "C:\PowerShell\OutputFile.txt"

Test-Connection -ComputerName www.example.local | Out-File -FilePath $outputFile -Append
Test-NetConnection -ComputerName www.example.local -Port 80 | Out-File -FilePath $outputFile -Append
Get-NetIPAddress | Out-File -FilePath $outputFile -Append
Resolve-DnsName www.example.local | Out-File -FilePath $outputFile -Append
Get-NetRoute | Out-File -FilePath $outputFile -Append
Get-NetAdapter | Select-Object Name, Status, LinkSpeed | Out-File -FilePath $outputFile -Append
Get-Counter -Counter "\Network Interface(*)\Bytes Total/sec" | Out-File -FilePath $outputFile -Append
}
& $scriptBlock






